package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.OrderDetailsResponse;
import com.example.demo.ResponceOrder;
import com.example.demo.model.Order;
import com.example.demo.model.RequestOrderItems;
import com.example.demo.service.OrderMapperService;
import com.example.demo.service.OrderServiceImpl;

@RestController
public class OrderController {

	@Autowired
	private OrderServiceImpl orderServiceImpl;

	@Autowired
	private OrderMapperService mapperService;

	@PostMapping(path = "/orders")
	public ResponseEntity<OrderDetailsResponse> placeorder(@RequestBody Order order) {

		Order placedOrder = new Order(order.getId(), order.getItemName(), order.getQuantity(), order.getPrice());

		orderServiceImpl.createOrder(placedOrder);

		return new ResponseEntity<>(mapperService.mapOrderDetails(placedOrder), HttpStatus.OK);
	}

	/**
	 * 
	 * @param customerName
	 * @param orders
	 * @return
	 */

	@PostMapping(path = "{customerName}/orders")
	public ResponseEntity<ResponceOrder> placeorder(@PathVariable String customerName,
			@RequestBody RequestOrderItems orders) {
		if (orders != null && !orders.getOrderlist().isEmpty()) {
			for (Order order : orders.getOrderlist()) {
				Order placedOrder = new Order(order.getId(), order.getItemName(), order.getQuantity(),
						order.getPrice());

				orderServiceImpl.createOrder(placedOrder);

				// return new ResponseEntity<>(mapperService.mapOrderDetails(placedOrder),
				// HttpStatus.OK);
			}
		}
		return new ResponseEntity<ResponceOrder>(
				mapperService.mapOrderDetails(orderServiceImpl.getOrderList(), customerName), HttpStatus.OK);

	}

}
